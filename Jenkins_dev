node
{
  def app

  stage('Clone repository')
  {
    node
    {
      try
      {
        checkout scm
        currentBuild.result = 'SUCCESS'
      }
      catch(any)
      {
         currentBuild.result = 'FAILURE'
         throw any
      }
      finally
      {
          step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: '$dev_email_id', sendToIndividuals: true])
      }
    }
   }

  stage('call script')
  {
    node
       {
         try
         {
           sh '''curl -u "8275C9CC42066F469BF8:cL3Xc9ZQsngj1X8bsbGU7Ghje22zazdY55FJLZ7X" \\
-X POST \\
-H \'Accept: application/json\' \\
-H \'Content-Type: application/json\' \\
-d \'{"inServiceStrategy":{"launchConfig": {"tty":true,"vcpu":1,"imageUuid":"docker:rethinkdb"}},"toServiceStrategy":null}\' \\
\'http://172.16.61.162:8087/v2-beta/projects/1a5/services/1s31?action=upgrade\''''

           currentBuild.result = 'SUCCESS'
         }
         catch(any)
         {
           currentBuild.result = 'FAILURE'
           throw any
         }
         finally
         {
           step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: '$dev_email_id', sendToIndividuals: true])
         }
       }
   }
}
